[InputData]

# Note: currently start_date must be the first hour of the year
start_date = 1982-01-01 00:00:00
# Note: currently send_date must be the last hour of the year
end_date = 2016-12-31 23:00:00

# 'AT00', 'CH00', 
# 'ITN1', 'ITCN', 'ITCS', 
# 'PT00'
country_codes = [
    'BE00', 'DE00', 'DKW1', 'DKE1', 'EE00', 'ES00',
    'FI00', 'FR00', 'UK00', 'LT00', 'LV00', 'NL00', 'NOS0', 'NOM1',
    'NON1', 'PL00', 'SE01', 'SE02', 'SE03', 'SE04'
    ]

demand_files = ['demands_elec_own_projection.xlsx','demands_DH_own__projection.xlsx', 'demands_other.xlsx']

scenarios = ['National Trends']
scenario_years = [2025]
output_folder_prefix = input
# final output folder is <output_folder_prefix>_<scenario>_<s_year> where
# (scenario, s_year) are from a loop of pairs in (scenarios, scenario_years)
        

write_csv_files = False
       
       
# Timeseries specification dictionary
#   dictionary item name. Used in messages while processing the data
#       - Other parameters are properties of this dictionary item 
#   processor_name = Name of the class called (required)
#       - The code will import and call file <src/processor_name.py> that must have a class with tha same name
#   bb_parameter = Name of Backbone parameter written to (required)
#   gdx_name_suffix = name of the written gdx file is <bb_parameter>_<gdx_name_suffix>.gdx
#   demand_grid = Name of demand energy carrier, e.g. elec (Default = None)
#   rounding_precision = Number of decimals in the final outputs (Default = 0)
#   calculate_average_year = Calculate values for an average year (Default = False)
#   process_only_single_year = Process values only for a single year, e.g. in case of lacking data (Default = False)
#   add_column = Optional additional column written to intermediate dataframes (Default = None)
#   add_column_bb_name = The name of the additional column in output .gdx  [grid, node, add_column_bb_name, f, t] (Default = None)
#   replace_grid_title = An alternative name for grid dimension in .gdx files for Backbone (Default = None)
#   replace_grid_values = An alternative value for grid dimension in .gdx files for Backbone (Default = None)

timeseries_specs = {
    'District heating demand': {
        'processor_name': 'DH_demand_fromTemperature',
        'bb_parameter': 'ts_influx',
        'gdx_name_suffix': 'DH_demand',
        'calculate_average_year': True, 
        'demand_grid': 'heat',
        },
    'electricity demand': {
        'processor_name': 'elec_demand_TYNDP2024',
        'bb_parameter': 'ts_influx',
        'gdx_name_suffix': 'elec_demand',
        'calculate_average_year': True, 
        'demand_grid': 'elec',
        },
    'hydro inflow': {
        'processor_name': 'hydro_inflow_MAF2019',
        'bb_parameter': 'ts_influx',
        'gdx_name_suffix': 'hydro',
        'calculate_average_year': True,
        },
    'hydro_storage_limits': {
        'processor_name': 'hydro_storage_limits_MAF2019',
        'bb_parameter': 'ts_node',
        'gdx_name_suffix': 'hydro_storage_limits',
        'process_only_single_year': True,   # same values for every year in the current data source
        'add_column': 'boundarytype',
        'add_column_bb_name': 'param_gnBoundaryTypes',
        },
    'hydro_generation_limits': {
        'processor_name': 'hydro_generation_limits_MAF2019',
        'bb_parameter': 'ts_node',
        'gdx_name_suffix': 'hydro_gen_limits',
        'add_column': 'genLimit',
        'add_column_bb_name': 'minGen',
        },
    'PV': {
        'processor_name': 'PV_MAF2019',
        'bb_parameter': 'ts_cf',
        'gdx_name_suffix': 'PV',
        'calculate_average_year': True,
        'rounding_precision': 5,
        'replace_grid_title': 'flow',
        'replace_grid_values': 'PV',
        },
    'wind_onshore': {
        'processor_name': 'wind_onshore_MAF2019',
        'bb_parameter': 'ts_cf',
        'gdx_name_suffix': 'wind_onshore',
        'calculate_average_year': True,
        'rounding_precision': 5,
        'replace_grid_title': 'flow',
        'replace_grid_values': 'onshore',
        },
    'wind_offshore': {
        'processor_name': 'wind_offshore_MAF2019',
        'bb_parameter': 'ts_cf',
        'gdx_name_suffix': 'wind_offshore',
        'calculate_average_year': True,
        'rounding_precision': 5,
        'replace_grid_title': 'flow',
        'replace_grid_values': 'offshore',
        },       
    }                 
